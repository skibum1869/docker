version: '3.8'
services:
  ollama:
    image: ollama/ollama:latest
    deploy:
      replicas: 3  # Specify the number of instances you want to run
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ollama.rule=PathPrefix(`/`)"
        - "traefik.http.services.ollama.loadbalancer.server.port=11434"
        - "traefik.http.routers.ollama.entrypoints=web"
    container_name: "ollama-{{.Task.Slot}}"
    hostname: "ollama-{{.Task.Slot}}"
    expose:
      - 11434/tcp
    healthcheck:
      test: ollama --version || exit 1
    command: serve
    volumes:
      - ollama-{{.Task.Slot}}:/root/.ollama  # Unique volume per instance
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0

  traefik:
    image: traefik:v2.10
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"  # Enable dashboard (don't use in production)
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:11434"
    ports:
      - "11434:11434"  # Ollama API
      - "8081:8080"    # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - node.role == manager

  webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: webui
    hostname: webui
    restart: unless-stopped
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.webui.rule=PathPrefix(`/`)"
        - "traefik.http.services.webui.loadbalancer.server.port=8080"
    expose:
      - 8080/tcp
    ports:
      - 8080:8080/tcp
    environment:
      - OLLAMA_BASE_URL=http://traefik:11434  # Point to the load balancer
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - traefik

volumes:
  ollama-1:
  ollama-2:
  ollama-3:
  open-webui:
